{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.jsx","components/search-panel/index.js","components/search-panel/search-panel.jsx","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.jsx","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/index.js","components/app/app.jsx","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","props","onChange","e","toState","currentTarget","value","type","placeholder","TodoListItem","classNames","this","important","onClick","onLabelClick","index","label","onMarkImportant","id","onDeleted","Component","TodoList","elements","filtered","map","item","key","ItemStatusFilter","changeStatus","toStateFromButtonFilter","textContent","buttonsMapped","clazz","buttonFilterText","React","ItemAddForm","state","changer","setState","toUpperCase","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","searchText","text","filter","includes","filterByButton","data","i","st","stateCopy","find","doneCount","length","todoCount","filteredByInput","filteredByButton","par","newItem","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a1d442c2.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel","import React from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nconst SearchPanel = (props) => {\r\n  return (\r\n    <input\r\n      onChange={(e) => {\r\n        // props.filter(e.target.value);\r\n        props.toState(e.currentTarget.value);\r\n      }}\r\n      type=\"text\"\r\n      className=\"form-control search-input\"\r\n      placeholder=\"type to search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem","import React from \"react\";\r\n\r\nimport \"./todo-list-item.css\";\r\nimport { Component } from \"react\";\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    let classNames = \"todo-list-item\";\r\n\r\n    if (this.props.done) {\r\n      classNames += \" done\";\r\n    }\r\n\r\n    if (this.props.important) {\r\n      classNames += \" important\";\r\n    }\r\n\r\n    return (\r\n      <div className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={() => {\r\n            this.props.onLabelClick(this.props.index);\r\n          }}\r\n        >\r\n          {this.props.label}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={() => {\r\n            this.props.onMarkImportant(this.props.id);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={() => {\r\n            this.props.onDeleted(this.props.id);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList","import React from \"react\";\r\n\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = (props) => {\r\n  // console.log(props);\r\n  // const elements = props.state.todoData.map\r\n  const elements = props.filtered.map((item, index) => {\r\n    return (\r\n      <li key={item.id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...item}\r\n          index={index}\r\n          onLabelClick={props.onLabelClick}\r\n          onMarkImportant={props.onMarkImportant}\r\n          onDeleted={props.onDeleted}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter","import React from \"react\";\r\n\r\nimport \"./item-status-filter.css\";\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n  render() {\r\n    let changeStatus = (e) => {\r\n      this.props.toStateFromButtonFilter(e.currentTarget.textContent);\r\n    };\r\n\r\n    let buttons = [{ label: \"All\" }, { label: \"Active\" }, { label: \"Done\" }];\r\n\r\n    let buttonsMapped = buttons.map((item) => {\r\n      let clazz =\r\n        this.props.buttonFilterText == item.label\r\n          ? \"btn-info\"\r\n          : \"btn-outline-secondary\";\r\n      return (\r\n        <button onClick={changeStatus} type=\"button\" className={`btn ${clazz}`}>\r\n          {item.label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttonsMapped}\r\n        {/* <button onClick={changeStatus} type=\"button\" className=\"btn btn-info\">\r\n          All\r\n        </button>\r\n        <button\r\n          onClick={changeStatus}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary\"\r\n        >\r\n          Active\r\n        </button>\r\n        <button\r\n          onClick={changeStatus}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-secondary\"\r\n        >\r\n          Done\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm","import React from \"react\";\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  changer = (e) => {\r\n    this.setState({\r\n      label: e.currentTarget.value.toUpperCase(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={(e) => {\r\n          // запрет перезагрузки страницы\r\n          e.preventDefault();\r\n          // добавляем дело\r\n          this.props.addItem(this.state.label);\r\n          this.setState({\r\n            label: \"\",\r\n          });\r\n        }}\r\n        className=\"item-add-form d-flex\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          // пишем данные сразу в местный state мимо инпута\r\n          onChange={this.changer}\r\n          // данные из местного state возвращаются\r\n          value={this.state.label}\r\n          className=\"form-control\"\r\n          placeholder=\"Tasks to do\"\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n          Add Item\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App","import React from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport \"./app.css\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nexport default class App extends React.Component {\r\n  maxId = 0;\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      id: ++this.maxId,\r\n      done: false,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Make Awesome App\"),\r\n      this.createTodoItem(\"Have a lunch\"),\r\n    ],\r\n    searchText: \"\",\r\n    buttonFilterText: \"All\",\r\n  };\r\n\r\n  // набор текста в инпуте для фильтрации в search-panel --> смена searchText в state;\r\n  // фильтрация идет следом на автомате, так как поменялся state, за ним и render\r\n  toState = (text) => {\r\n    this.setState({\r\n      ...this.state,\r\n      searchText: text,\r\n    });\r\n  };\r\n\r\n  filter = (text) => {\r\n    text = text.toUpperCase();\r\n    return this.state.todoData.filter((item) => {\r\n      return item.label.toUpperCase().includes(text);\r\n    });\r\n  };\r\n\r\n  // выбор кнопки для фильтрации в item-status-filter --> смена buttonFilterText в state;\r\n  // фильтрация идет следом на автомате, так как поменялся state, за ним и render\r\n\r\n  toStateFromButtonFilter = (text) => {\r\n    this.setState({\r\n      ...this.state,\r\n      buttonFilterText: text,\r\n    });\r\n  };\r\n\r\n  filterByButton = (text, data) => {\r\n    switch (text) {\r\n      case \"All\":\r\n        return data;\r\n      case \"Active\":\r\n        return data.filter((item) => {\r\n          return item.done == false;\r\n        });\r\n      case \"Done\":\r\n        return data.filter((item) => {\r\n          return item.done == true;\r\n        });\r\n    }\r\n  };\r\n\r\n  // onLabelClick - сделано или не сделано, поиск по индексу\r\n  onLabelClick = (i) => {\r\n    this.setState((st) => {\r\n      let stateCopy = {\r\n        ...st,\r\n        todoData: [...st.todoData],\r\n      };\r\n      stateCopy.todoData[i].done = !st.todoData[i].done;\r\n\r\n      return stateCopy;\r\n    });\r\n  };\r\n  // onMarkImportant - важно или не важно, поиск по id\r\n  onMarkImportant = (i) => {\r\n    this.setState((st) => {\r\n      let stateCopy = {\r\n        ...st,\r\n        todoData: [...st.todoData],\r\n      };\r\n\r\n      stateCopy.todoData.find(\r\n        (item) => item.id == i\r\n      ).important = !st.todoData.find((item) => item.id == i).important;\r\n\r\n      return stateCopy;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const doneCount = this.state.todoData.filter((item) => item.done).length;\r\n    const todoCount = this.state.todoData.filter((item) => !item.done).length;\r\n    const filteredByInput = this.filter(this.state.searchText);\r\n    const filteredByButton = this.filterByButton(\r\n      this.state.buttonFilterText,\r\n      filteredByInput\r\n    );\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel toState={this.toState} state={this.state} />\r\n          <ItemStatusFilter\r\n            toStateFromButtonFilter={this.toStateFromButtonFilter}\r\n            buttonFilterText={this.state.buttonFilterText}\r\n          />\r\n        </div>\r\n\r\n        <TodoList\r\n          filtered={filteredByButton}\r\n          onLabelClick={this.onLabelClick}\r\n          onMarkImportant={this.onMarkImportant}\r\n          onDeleted={(par) => {\r\n            this.setState((st) => {\r\n              // st - state по умолчанию\r\n              return {\r\n                todoData: st.todoData.filter((item) => {\r\n                  return item.id !== par;\r\n                }),\r\n              };\r\n            });\r\n          }}\r\n          state={this.state}\r\n        />\r\n\r\n        <ItemAddForm\r\n          addItem={(text) => {\r\n            const newItem = this.createTodoItem(text);\r\n            this.setState((st) => {\r\n              return {\r\n                ...st,\r\n                todoData: [...st.todoData, newItem],\r\n              };\r\n            });\r\n          }}\r\n          state={this.state}\r\n        />\r\n\r\n        {/* <br />\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            console.log(this.state);\r\n            console.table(this.state.todoData);\r\n          }}\r\n        >\r\n          CONSOLE: this.state.todoData\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\n\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}